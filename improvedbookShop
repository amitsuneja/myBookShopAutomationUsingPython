import csv
my_book_shelf = {}


class Book(object):

    def __init__(self, name, author, language, isbn, price, count=1):
        self.name = name
        self.author = author
        self.language = language
        self.isbn = isbn
        self.price = price
        self.count = count

    def print_book(self):
        print("Book Name :", self.name)
        print("Author :", self.author)
        print("Language :", self.language)
        print("Isbn :", self.isbn)
        print("Price :", self.price)
        print("Number of Copies in Stock:", self.count)
        print("\n")


class BookShelf(object):

    @staticmethod
    def get_majorshelf(name):
        return (name[0:2].upper())

    @staticmethod
    def search_object_withkey(mydict, mykey):
        if mykey in mydict.keys():
            return (mydict[mykey])

    @staticmethod
    def search_object_with_value(mydict, myvalue):
        for key1 in mydict.keys():
            for key2 in mydict[key1].keys():
                if myvalue in mydict[key1][key2].name or mydict[key1][key2].author:
                    return(mydict[key1][key2])

    def add_book(self, name, author, language, isbn, price, count=1):
        major_shelf_name =self.get_majorshelf(name)
        check_major_shelf = self.search_object_withkey(my_book_shelf, major_shelf_name)
        if check_major_shelf is None:
            my_book_shelf[major_shelf_name] = {}
        check_minor_shelf = self.search_object_withkey(my_book_shelf[major_shelf_name], isbn)
        if check_minor_shelf is None:
            my_book = Book(name, author, language, isbn, price)
            my_book_shelf[major_shelf_name][isbn] = my_book
        else:
            my_book_shelf[major_shelf_name][isbn].count += 1

    def delete_book(self, isbn):
        my_book = self.search_by_isbn(isbn)
        if my_book is not None:
            my_book.count -= 1
        if my_book.count == 0:
            major_shelf = self.get_majorshelf(my_book.name)
            my_book_shelf[major_shelf].pop(isbn)

    def upload_data(self, csv_file):
        with open(csv_file, "rt") as my_csv_file:
            my_csv_reader = csv.reader(my_csv_file)
            for row in my_csv_reader:
                self.add_book(row[0], row[1], row[2], row[3], row[4])

    def search_by_isbn(self, isbn):
        for key in my_book_shelf.keys():
            check_book = self.search_object_withkey(my_book_shelf[key], isbn)
            if check_book is not None:
                book_found = my_book_shelf[key][isbn]
                return book_found

    def search_by_name(self, string):
        book_found = self.search_object_with_value(my_book_shelf, string)
        if book_found is not None:
            Book.print_book(book_found)

    @staticmethod
    def list_all_books():
        for key in my_book_shelf.keys():
            for isbn in my_book_shelf[key].keys():
                book_found = my_book_shelf[key][isbn]
                Book.print_book(book_found)


class Basket(BookShelf):

    def __init__(self, cust_name, cust_phone, cust_address):
        self.book_list = list()
        self.total_price = 0
        self.cust_name = cust_name
        self.cust_phone = cust_phone
        self.cust_address = cust_address

    def add_book_to_basket(self, isbn):
        my_book = BookShelf.search_by_isbn(self, isbn)
        self.book_list.append(my_book)
        self.total_price = self.total_price + int(my_book.price)
        BookShelf.delete_book(self, isbn)
        print("Cost of Basket:", self.total_price)

    def delete_book_from_basket(self, isbn):
        j = len(self.book_list)
        for i in range(0, j):
            if self.book_list[i].isbn == isbn:
                k = i
        deleted_book = self.book_list.pop(k)
        BookShelf.add_book(self, deleted_book.name, deleted_book.author, deleted_book.language, deleted_book.isbn, deleted_book.price)
        self.total_price = self.total_price - int(deleted_book.price)
        print("Cost of Basket:", self.total_price)

    def show_basket(self):
        for book in self.book_list:
            Book.print_book(book)


class CashCounter(Basket):

    def __init__(self, class_b):
        self.cust_name = class_b.cust_name
        self.cust_phone = class_b.cust_phone
        self.cust_address = class_b.cust_address
        self.total_price = class_b.total_price
        self.book_list = class_b.book_list

    def sell_book(self):
        Basket.show_basket(self)
        print("We received sum of RS {} from you".format(self.total_price))
        print("______Thanks for Shopping with Amazon Store______")
        print("Name :  ", self.cust_name)
        print("ph: ", self.cust_phone)
        print("Address: ", self.cust_address)



S = BookShelf()
S.upload_data("E:\\Ashish\MyCsvFiles\\myCurrentInventory.csv")
print("____________________________")
B = Basket("Amit Suneja", 9717123330, "D-802, Vrinda City")
B.add_book_to_basket("99")
B.add_book_to_basket("111")
B.delete_book_from_basket("111")
C = CashCounter(B)
C.sell_book()


